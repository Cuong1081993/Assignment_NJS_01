{"ast":null,"code":"var _jsxFileName = \"D:\\\\BAITAP\\\\FUNIX\\\\Assignment_NJS_01\\\\frontend\\\\src\\\\components\\\\search\\\\SearchResult.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport requests from '../../utils/requests';\nimport './SearchResult.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\nconst SearchResult = ({\n  query\n}) => {\n  const [movies, setMovies] = useState([]);\n  const url = `${requests.fetchSearch}&query=${query}`;\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(url);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [url, query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters search-resul-container sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      className: `row_poster row_posterLarge`,\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  })));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["D:/BAITAP/FUNIX/Assignment_NJS_01/frontend/src/components/search/SearchResult.jsx"],"names":["React","useState","useEffect","axios","requests","base_url","SearchResult","query","movies","setMovies","url","fetchSearch","fetchData","request","get","data","results","map","movie","id","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,oBAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMS,GAAG,GAAI,GAAEN,QAAQ,CAACO,WAAY,UAASJ,KAAM,EAAnD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeU,SAAf,GAA2B;AAC1B,YAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUJ,GAAV,CAAtB;AACAD,MAAAA,SAAS,CAACI,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACA;;AAED,QAAIN,KAAJ,EAAW;AACVK,MAAAA,SAAS;AACT,KAFD,MAEO;AACNH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACA;AACD,GAZQ,EAYN,CAACC,GAAD,EAAMH,KAAN,CAZM,CAAT;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAW;AACtB,wBACC;AACC,MAAA,GAAG,EAAEA,KAAK,CAACC,EADZ;AAEC,MAAA,SAAS,EAAG,4BAFb;AAGC,MAAA,GAAG,EAAG,GAAEd,QAAS,GAAEa,KAAK,CAACE,WAAY,EAHtC;AAIC,MAAA,GAAG,EAAEF,KAAK,CAACG,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAQA,GATA,CADF,CAFD,CADD;AAiBA,CApCD;;AAsCA,eAAef,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport axios from '../../utils/axios';\r\nimport requests from '../../utils/requests';\r\n\r\nimport './SearchResult.css';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst SearchResult = ({query}) => {\r\n\tconst [movies, setMovies] = useState([]);\r\n\r\n\tconst url = `${requests.fetchSearch}&query=${query}`;\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData() {\r\n\t\t\tconst request = await axios.get(url);\r\n\t\t\tsetMovies(request.data.results);\r\n\t\t\treturn request;\r\n\t\t}\r\n\r\n\t\tif (query) {\r\n\t\t\tfetchData();\r\n\t\t} else {\r\n\t\t\tsetMovies([]);\r\n\t\t}\r\n\t}, [url, query]);\r\n\r\n\treturn(\r\n\t\t<div className='row'>\r\n\t\t\t<h2>Search Result</h2>\r\n\t\t\t<div className='row_posters search-resul-container sc2'>\r\n\t\t\t\t{movies.map((movie) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\t\tclassName={`row_poster row_posterLarge`}\r\n\t\t\t\t\t\t\tsrc={`${base_url}${movie.poster_path}`}\r\n\t\t\t\t\t\t\talt={movie.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}